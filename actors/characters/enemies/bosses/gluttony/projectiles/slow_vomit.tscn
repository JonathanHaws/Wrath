[gd_scene load_steps=13 format=3 uid="uid://d2iqujeqiun08"]

[ext_resource type="Script" uid="uid://b1k7rqqomk7ae" path="res://actors/characters/enemies/projectile.gd" id="1_e1mm7"]
[ext_resource type="Script" uid="uid://nf5y0ndpubhh" path="res://actors/3d_scene_spawner.gd" id="2_fabgd"]
[ext_resource type="PackedScene" uid="uid://4f506yax85t1" path="res://actors/characters/enemies/bosses/gluttony/projectiles/puddle.tscn" id="3_j1560"]
[ext_resource type="Material" uid="uid://14hmcag5btd0" path="res://actors/characters/enemies/bosses/gluttony/projectiles/vomit.tres" id="4_j1560"]

[sub_resource type="CylinderMesh" id="CylinderMesh_cgbyb"]
top_radius = 0.167
bottom_radius = 0.0
cap_bottom = false

[sub_resource type="SphereMesh" id="SphereMesh_v5ope"]

[sub_resource type="GDScript" id="GDScript_n8vw1"]
script/source = "extends Area3D
@export var damage = 1
@export var damage_spread := 0
@export var damage_multiplier = 1
@export var damage_groups: Array[String] = [\"player_hitshape\"] ##area groups you want this hurtbox to damage

@export_group(\"Save\")
@export var save_damage: bool = false
@export var save_key: String = \"\"
@export var animation_player: AnimationPlayer
@export var upgrade_animation: String = \"\"

func _exit_tree() -> void:
	if not save_damage: return
	Save.data[save_key] = damage
	Save.save_game()

func _on_save_data_updated() -> void:
	if not save_damage: return
	if Save.data[save_key] != damage:
		if animation_player and animation_player.has_animation(upgrade_animation):
			animation_player.play(upgrade_animation)
	damage = Save.data[save_key]

func _on_area_entered(area: Area3D) -> void:
	for group in damage_groups:
		if area.is_in_group(group):
			if \"hit\" in area:
				area.hit(self, damage + randi_range(-damage_spread, damage_spread))
			break

func _ready() -> void:
	area_entered.connect(_on_area_entered)
	
	if save_damage: 
		if save_key == \"\": save_key = Save.get_unique_key(self, \"damage\")
		if Save.data.has(save_key):
			damage = Save.data[save_key]
		else:
			Save.data[save_key] = damage
		Save.connect(\"save_data_updated\", _on_save_data_updated)
	
#func _process(_delta: float) -> void:
	#print(damage)
"

[sub_resource type="BoxShape3D" id="BoxShape3D_3ab56"]
size = Vector3(0.567566, 0.678773, 0.566377)

[sub_resource type="Animation" id="Animation_mr47g"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Node3D:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(1, 1, 1)]
}

[sub_resource type="Animation" id="Animation_wh4aa"]
resource_name = "colliding"
length = 0.5
tracks/0/type = "method"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0.433333),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"queue_free"
}]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Node3D:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.266667),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(1, 1, 1), Vector3(0, 0, 0)]
}
tracks/2/type = "method"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("PuddleSpawner")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"spawn"
}]
}

[sub_resource type="Animation" id="Animation_v5ope"]
resource_name = "projectile"
length = 4.0
tracks/0/type = "method"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(4),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"queue_free"
}]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Node3D:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 3.56667),
"transitions": PackedFloat32Array(16.5642, 1),
"update": 0,
"values": [Vector3(1, 1, 1), Vector3(0, 0, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_mr47g"]
_data = {
&"RESET": SubResource("Animation_mr47g"),
&"colliding": SubResource("Animation_wh4aa"),
&"projectile": SubResource("Animation_v5ope")
}

[node name="GluttonyProjectile" type="Node3D" node_paths=PackedStringArray("ray", "collision_point", "collision_animation_player")]
script = ExtResource("1_e1mm7")
speed = 22.0
gravity = 15.0
random_velocity_x = 0.2
random_velocity_y = 0.2
ray = NodePath("RayCast3D")
exclude_groups = Array[String](["gluttony", "player"])
collision_point = NodePath("PuddleSpawner")
collision_animation_player = NodePath("AnimationPlayer")
collision_animation_name = "colliding"

[node name="PuddleSpawner" type="Node3D" parent="." node_paths=PackedStringArray("copy_transform_node")]
rotation_edit_mode = 1
script = ExtResource("2_fabgd")
scenes = Array[PackedScene]([ExtResource("3_j1560")])
copy_transform_node = NodePath(".")

[node name="Node3D" type="Node3D" parent="."]

[node name="MeshInstance3D2" type="MeshInstance3D" parent="Node3D"]
transform = Transform3D(1, -1.74846e-07, -7.64274e-15, 0, -4.37114e-08, 1, -1.74846e-07, -1, -4.37114e-08, -0.0224094, 2.93627e-08, 1.06086)
material_override = ExtResource("4_j1560")
mesh = SubResource("CylinderMesh_cgbyb")
skeleton = NodePath("")

[node name="MeshInstance3D3" type="MeshInstance3D" parent="Node3D"]
transform = Transform3D(0.345907, -6.04803e-08, -2.64368e-15, 2.73463e-22, -1.51201e-08, 0.345907, -6.04803e-08, -0.345907, -1.51201e-08, -0.0224095, -1.576e-08, 0.0285747)
material_override = ExtResource("4_j1560")
mesh = SubResource("SphereMesh_v5ope")
skeleton = NodePath("")

[node name="Attack" type="Area3D" parent="." groups=["gluttony"]]
transform = Transform3D(0.581318, 0, 0, 0, 0.581318, 0, 0, 0, 0.581318, 0, 0, 0)
collision_layer = 3
collision_mask = 3
script = SubResource("GDScript_n8vw1")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Attack"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0126296, -0.00430307, 0.0610786)
shape = SubResource("BoxShape3D_3ab56")
debug_color = Color(0.668887, 0.106286, 1.92523e-07, 1)

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_mr47g")
}
autoplay = "projectile"

[node name="RayCast3D" type="RayCast3D" parent="."]
debug_shape_custom_color = Color(1, 1, 1, 1)
